// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlayArea should render correctly 1`] = `
.c1 {
  background: #EAEAEA;
  border-radius: 5px;
  cursor: pointer;
  display: inline-block;
  height: 210px;
  padding: 8px;
  place-self: center;
  -webkit-transition: box-shadow 0.2s ease-in-out;
  transition: box-shadow 0.2s ease-in-out;
  width: 150px;
}

.c1 p {
  margin-bottom: 0;
  margin-top: 0;
}

.c1 p.subtext {
  font-size: 11px;
  margin-top: 3px;
}

.c1 p.ability1Title {
  margin-top: 15px;
}

.c1.active {
  background: #9FFFB0;
}

.c1.card {
  box-shadow: 0 1px 3px rgba(0,0,0,0.12),0 1px 2px rgba(0,0,0,0.24);
}

.c1.card:active {
  background: #9FFFB0;
}

.c1.card:hover {
  box-shadow: 0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);
}

.c1.deck {
  background: #C6C6C6;
  grid-row: 3;
  grid-column: 1;
  box-shadow: 0 1px 3px rgba(0,0,0,0.52),0 1px 2px rgba(0,0,0,0.64);
}

.c1.stackedCard {
  margin-left: -11px;
  margin-top: -11px;
}

.c1.stackedCard.canDrawCard:hover {
  background: #9FFFB0;
}

.c1.stackedCard.canDrawCard:hover .drawCardIcon circle {
  fill: #353;
}

.c1.stackedCard.canDrawCard:hover .drawCardIcon p {
  margin-top: 7px;
}

.c1.stackedCard.canDrawCard:hover .drawCardIcon path,
.c1.stackedCard.canDrawCard:hover .drawCardIcon line {
  stroke: #9FFFB0;
}

.c1.stackedCard.canDrawCard:hover .drawCardIcon svg {
  width: 56;
  height: 56;
  margin-top: -3px;
}

.c1.stackedCard .drawCardIcon {
  margin-top: 60px;
  text-align: center;
}

.c1.stackedCard .drawCardIcon p {
  margin-top: 10px;
}

.c2 {
  cursor: pointer;
}

.c2.endTurnIcon {
  display: inline-block;
  position: fixed;
  right: 10px;
  top: 10px;
}

.c0 {
  display: grid;
  grid-row-gap: 8px;
  grid-template-columns: repeat(10,175px [col-start]);
  margin: 0 auto;
  width: 1750px;
}

@media screen and (max-width:1750px) {
  .c2.endTurnIcon {
    right: 22px;
    top: 22px;
  }
}

@media screen and (max-width:1750px) {
  .c0 {
    grid-template-columns: repeat(8,175px [col-start]);
    width: 1400px;
  }
}

@media screen and (max-width:1500px) {
  .c0 {
    grid-template-columns: repeat(6,175px [col-start]);
    width: 1050px;
  }
}

<div
  className="c0 playArea"
>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Alabama
    </p>
    <p
      className="subtext subtitle"
    >
      state
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Alaska
    </p>
    <p
      className="subtext subtitle"
    >
      state
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Arizona
    </p>
    <p
      className="subtext subtitle"
    >
      state
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Arkansas
    </p>
    <p
      className="subtext subtitle"
    >
      state
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      California
    </p>
    <p
      className="subtext subtitle"
    >
      state
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Colorado
    </p>
    <p
      className="subtext subtitle"
    >
      state
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Connecticut
    </p>
    <p
      className="subtext subtitle"
    >
      state
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Delaware
    </p>
    <p
      className="subtext subtitle"
    >
      state
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Sonny Perdue
    </p>
    <p
      className="subtext subtitle"
    >
      cabinet
    </p>
    <p
      className="subtext ability1Title"
    >
      Judo Chop
       - 
      Deal 20 damage to player.
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      William Barr
    </p>
    <p
      className="subtext subtitle"
    >
      cabinet
    </p>
    <p
      className="subtext ability1Title"
    >
      Banshee Call
       - 
      Skip opponent's next turn.
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Gina Haspel
    </p>
    <p
      className="subtext subtitle"
    >
      cabinet
    </p>
  </div>
  <div
    className="c1 card"
    onClick={[Function]}
    onMouseDown={[Function]}
  >
    <p
      className="title"
    >
      Lamar Alexander
    </p>
    <p
      className="subtext subtitle"
    >
      congress
    </p>
  </div>
  <div
    className="c1 deck"
  >
    <div
      className="c1 stackedCard canDrawCard"
      onClick={[Function]}
    >
      <div
        className="c2 drawCardIcon"
      >
        <svg
          height="50"
          viewBox="0 0 703 703"
          width="50"
        >
          <g
            transform="translate(-398 -203)"
          >
            <circle
              cx="351.5"
              cy="351.5"
              fill="#707070"
              r="351.5"
              transform="translate(398 203)"
            />
            <path
              d="M136,136,0,272ZM0,0,136,136Z"
              fill="none"
              stroke="#EAEAEA"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="100"
              transform="translate(805.5 418.5)"
            />
            <line
              fill="none"
              stroke="#EAEAEA"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="100"
              transform="translate(556.5 554.5)"
              x2="385"
            />
          </g>
        </svg>
        <p>
          Take a Card
        </p>
      </div>
    </div>
  </div>
</div>
`;
